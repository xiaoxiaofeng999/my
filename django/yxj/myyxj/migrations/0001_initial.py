# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2019-01-11 10:38
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.CharField(max_length=100, unique=True, verbose_name='邮箱')),
                ('address', models.CharField(max_length=255, null=True, verbose_name='地址')),
                ('phone', models.CharField(max_length=20, null=True, verbose_name='手机号')),
                ('icon', models.ImageField(null=True, upload_to='icon')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productimg', models.CharField(max_length=255, verbose_name='商品图片')),
                ('productname', models.CharField(max_length=100, verbose_name='商品名字')),
                ('productgram', models.CharField(max_length=10, verbose_name='商品克重')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='商品价格')),
                ('originalprice', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='商品原价')),
                ('firsttype', models.CharField(max_length=30, verbose_name='商品一级分类')),
                ('secondtype', models.CharField(max_length=30, verbose_name='商品二级分类')),
                ('storenums', models.IntegerField(default=4000, verbose_name='库存')),
                ('salesvolume', models.IntegerField(default=300, verbose_name='销量')),
                ('productid', models.IntegerField(verbose_name='产品编号')),
                ('producttaste', models.CharField(max_length=30, verbose_name='产品口味')),
            ],
        ),
    ]
